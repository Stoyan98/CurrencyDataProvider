// <auto-generated />
using System;
using CurrencyDataProvider.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CurrencyDataProvider.Data.EF.Migrations
{
    [DbContext(typeof(CurrencyDataProviderDbContext))]
    partial class CurrencyDataProviderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CurrencyDataProvider.Domain.CurrenciesInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("TimeStamp")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CurrenciesInformations");
                });

            modelBuilder.Entity("CurrencyDataProvider.Domain.Rate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("CurrenciesInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CurrenciesInformationId");

                    b.ToTable("Rates");
                });

            modelBuilder.Entity("CurrencyDataProvider.Domain.Rate", b =>
                {
                    b.HasOne("CurrencyDataProvider.Domain.CurrenciesInformation", "CurrenciesInformation")
                        .WithMany("Rates")
                        .HasForeignKey("CurrenciesInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrenciesInformation");
                });

            modelBuilder.Entity("CurrencyDataProvider.Domain.CurrenciesInformation", b =>
                {
                    b.Navigation("Rates");
                });
#pragma warning restore 612, 618
        }
    }
}
